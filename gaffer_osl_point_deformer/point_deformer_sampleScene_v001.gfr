import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import GafferUSD
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 5, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["SceneReader15"] = GafferScene.SceneReader( "SceneReader15" )
parent.addChild( __children["SceneReader15"] )
__children["SceneReader15"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SceneReader16"] = GafferScene.SceneReader( "SceneReader16" )
parent.addChild( __children["SceneReader16"] )
__children["SceneReader16"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SceneReader17"] = GafferScene.SceneReader( "SceneReader17" )
parent.addChild( __children["SceneReader17"] )
__children["SceneReader17"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Reference_point_deformer1"] = Gaffer.Reference( "Reference_point_deformer1" )
parent.addChild( __children["Reference_point_deformer1"] )
__children["Reference_point_deformer1"].load( "/users/martino/Documents/untold_shaders/sample_scenes/gaffer_osl_point_deformer/gaffer_reference/osl_point_deformer.grf" )
__children["Reference_point_deformer1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes4"] = GafferScene.MergeScenes( "MergeScenes4" )
parent.addChild( __children["MergeScenes4"] )
__children["MergeScenes4"]["in"].resize( 3 )
__children["MergeScenes4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["UsdPreviewSurface"] = GafferUSD.USDShader( "UsdPreviewSurface" )
parent.addChild( __children["UsdPreviewSurface"] )
__children["UsdPreviewSurface"].loadShader( "UsdPreviewSurface" )
__children["UsdPreviewSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment1"] = GafferScene.ShaderAssignment( "ShaderAssignment1" )
parent.addChild( __children["ShaderAssignment1"] )
__children["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["UsdPreviewSurface1"] = GafferUSD.USDShader( "UsdPreviewSurface1" )
parent.addChild( __children["UsdPreviewSurface1"] )
__children["UsdPreviewSurface1"].loadShader( "UsdPreviewSurface" )
__children["UsdPreviewSurface1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["EnvironmentLight"] = GafferOSL.OSLLight( "EnvironmentLight" )
parent.addChild( __children["EnvironmentLight"] )
__children["EnvironmentLight"].loadShader( "environmentLight" )
__children["EnvironmentLight"]["attributes"].addChild( Gaffer.NameValuePlug( "dl:visibility.camera", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "cameraVisibility", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["EnvironmentLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SkydomeLight"] = GafferArnold.ArnoldLight( "SkydomeLight" )
parent.addChild( __children["SkydomeLight"] )
__children["SkydomeLight"].loadShader( "skydome_light" )
__children["SkydomeLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes"] = GafferScene.MergeScenes( "MergeScenes" )
parent.addChild( __children["MergeScenes"] )
__children["MergeScenes"]["in"].resize( 5 )
__children["MergeScenes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SceneReader18"] = GafferScene.SceneReader( "SceneReader18" )
parent.addChild( __children["SceneReader18"] )
__children["SceneReader18"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 1001 )
parent["frameRange"]["end"].setValue( 1025 )
parent["frame"].setValue( 1018.0 )
parent["framesPerSecond"].setValue( 25.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 35973 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["SceneReader15"]["fileName"].setValue( '/users/martino/Documents/untold_shaders/sample_scenes/gaffer_osl_point_deformer/abc_data/GEO_pigHead1.abc' )
__children["SceneReader15"]["__uiPosition"].setValue( imath.V2f( -6.41502571, 27.5602722 ) )
__children["SceneReader16"]["fileName"].setValue( '/users/martino/Documents/untold_shaders/sample_scenes/gaffer_osl_point_deformer/abc_data/GEO_pigHead_anim.abc' )
__children["SceneReader16"]["__uiPosition"].setValue( imath.V2f( 14.368825, 27.0654144 ) )
__children["SceneReader17"]["fileName"].setValue( '/users/martino/Documents/untold_shaders/sample_scenes/gaffer_osl_point_deformer/abc_data/GRM_hair1.abc' )
__children["SceneReader17"]["__uiPosition"].setValue( imath.V2f( -22.4925804, 27.3935318 ) )
Gaffer.Metadata.registerValue( __children["Reference_point_deformer1"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["Reference_point_deformer1"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["Reference_point_deformer1"]["__uiPosition"].setValue( imath.V2f( -6.41502571, 0.341225207 ) )
__children["Reference_point_deformer1"]["SKIN_STATIC"].setInput( __children["SceneReader15"]["out"] )
__children["Reference_point_deformer1"]["SKIN_ANIM"].setInput( __children["SceneReader16"]["out"] )
__children["Reference_point_deformer1"]["GEO_TO_DEFORM"].setInput( __children["SceneReader17"]["out"] )
__children["Reference_point_deformer1"]["skinLocation"].setValue( '/ASSET/geo/pighead' )
__children["Reference_point_deformer1"]["geoLocation"].setValue( '...' )
__children["MergeScenes4"]["in"][0].setInput( __children["Reference_point_deformer1"]["out"] )
__children["MergeScenes4"]["in"][1].setInput( __children["SceneReader16"]["out"] )
__children["MergeScenes4"]["__uiPosition"].setValue( imath.V2f( 5.8799572, -20.681076 ) )
__children["ShaderAssignment"]["in"].setInput( __children["MergeScenes4"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["UsdPreviewSurface"]["out"]["surface"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 5.87995768, -43.3544388 ) )
__children["UsdPreviewSurface"]["__uiPosition"].setValue( imath.V2f( -13.6090126, -43.8544388 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/ASSET/groom/pighead/GRM_hair', '/ASSET/geo/pigheadScatter' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 20.152174, -37.2717667 ) )
__children["ShaderAssignment1"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["ShaderAssignment1"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment1"]["shader"].setInput( __children["UsdPreviewSurface1"]["out"]["surface"] )
__children["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( 5.87995815, -61.8033485 ) )
__children["UsdPreviewSurface1"]["parameters"]["diffuseColor"].setValue( imath.Color3f( 0.180000007, 0.0783000067, 0.0783000067 ) )
__children["UsdPreviewSurface1"]["__uiPosition"].setValue( imath.V2f( -12.4498758, -62.3033485 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/ASSET/geo/pighead' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 20.4771271, -55.7206535 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 1.5379107, 0.922555745, 1.90257585 ) )
__children["Camera"]["transform"]["rotate"].setValue( imath.V3f( -8.59435844, 39.5340843, 2.56132148e-06 ) )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["focalLength"].setValue( 50.0 )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 29.3545036, -70.7271347 ) )
__children["EnvironmentLight"]["shape"].setValue( 2 )
Gaffer.Metadata.registerValue( __children["EnvironmentLight"]["shape"], 'plugValueWidget:type', '' )
__children["EnvironmentLight"]["geometryType"].setValue( 'dl:environment' )
Gaffer.Metadata.registerValue( __children["EnvironmentLight"]["geometryType"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["EnvironmentLight"]["geometryBound"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["EnvironmentLight"]["geometryParameters"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["EnvironmentLight"]["attributes"]["cameraVisibility"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["EnvironmentLight"]["attributes"]["cameraVisibility"]["name"], 'readOnly', True )
__children["EnvironmentLight"]["__uiPosition"].setValue( imath.V2f( 50.8996582, -76.297287 ) )
__children["SkydomeLight"]["name"].setValue( 'skydomeLight' )
__children["SkydomeLight"]["parameters"]["camera"].setValue( 0.0 )
__children["SkydomeLight"]["__uiPosition"].setValue( imath.V2f( 59.7447395, -93.0907593 ) )
__children["MergeScenes"]["in"][0].setInput( __children["ShaderAssignment1"]["out"] )
__children["MergeScenes"]["in"][1].setInput( __children["Camera"]["out"] )
__children["MergeScenes"]["in"][2].setInput( __children["EnvironmentLight"]["out"] )
__children["MergeScenes"]["in"][3].setInput( __children["SkydomeLight"]["out"] )
__children["MergeScenes"]["__uiPosition"].setValue( imath.V2f( 12.3265638, -107.93293 ) )
__children["SceneReader18"]["fileName"].setValue( '/users/martino/Documents/untold_shaders/sample_scenes/gaffer_osl_point_deformer/abc_data/GEO_piheadScatterSphere1.abc' )
__children["SceneReader18"]["refreshCount"].setValue( 1 )
__children["SceneReader18"]["__uiPosition"].setValue( imath.V2f( -36.4268684, 27.2277069 ) )
__children["Backdrop"]["title"].setValue( 'INFO' )
__children["Backdrop"]["scale"].setValue( 2.0 )
__children["Backdrop"]["description"].setValue( 'IMPORTAN: install the provided .oso file before opening this scene\n\nIMPORTAN: give the correct SKIN and GEO locations for this to work\n\nThe static Skin and anim Skin need to have the exact same hierarhy location\n\nThe "Geometric Rotation" mode can handle curves and other arbitrary geometries, try plugging the scattered spheres sceneReader\n\nif your SKIN doesn\'t have N, you can calculate it on the fly with the "Generate Skin Normals" checkbox\n\nall very WIP and not intended for Production' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 35.5576134, 28.1847801 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -57.4154587 ), imath.V2f( 66.9505615, 10 ) ) )


del __children
